- hosts: db
  become: yes
  remote_user: db
  gather_facts: no

  tasks:
    - name: Set timezone
      timezone:
        name: Asia/Tokyo

    - name: apt update
      apt:
        update_cache: yes

    - name: Install apt packages
      apt:
        name:
          - postgresql
          - postgresql-client
          - python3-psycopg2
          - bzip2
        state: present
        update_cache: yes

    - name: Ensure PostgreSQL service is enabled and started
      service:
        name: postgresql
        enabled: yes
        state: started

    - name: Create PostgreSQL databases
      community.postgresql.postgresql_db:
        login_host: "127.0.0.1"
        login_user: postgres
        login_password: "{{ postgres.root.password }}"
        name: "{{ item.name }}"
        encoding: 'UTF8'
        state: present
      loop: "{{ postgres.databases }}"

    - name: Create PostgreSQL users
      community.postgresql.postgresql_user:
        login_host: "127.0.0.1"
        login_user: postgres
        login_password: "{{ postgres.root.password }}"
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        role_attr_flags: "LOGIN"
        state: present
      loop: "{{ postgres.users }}"

    - name: Attach priv to group roles on public schema
      community.postgresql.postgresql_privs:
        login_host: "127.0.0.1"
        login_user: postgres
        login_password: "{{ postgres.root.password }}"
        database: "{{ item.name }}"
        priv: ALL
        type:  database
        role: "{{ item.name }}"
        state: present
      loop: "{{ postgres.users }}"

    - name: Grant USAGE and CREATE privileges on schema public
      community.postgresql.postgresql_privs:
        login_host: "127.0.0.1"
        login_user: postgres
        login_password: "{{ postgres.root.password }}"
        database: "{{ item.name }}"
        role: "{{ item.name }}"
        obj: public
        type: schema
        privs: USAGE,CREATE
        state: present
      loop: "{{ postgres.users }}"
      loop_control:
        label: "{{ item.name }}"