- hosts: home
  become: yes
  remote_user: home
  gather_facts: no
  tasks:
    - name: Set timezone
      timezone:
        name: Asia/Tokyo
    - name: nginx location config file directory
      file: path={{ item.path }} state={{ item.state }} owner={{ item.owner }} group={{ item.group }} mode=0755
      with_items:
        - {
            path: /opt/electric-power-monitor-service,
            state: directory,
            owner: root,
            group: root,
          }
        - {
            path: /opt/back-end-api-service,
            state: directory,
            owner: root,
            group: root,
          }
        - {
            path: /opt/scraping-service,
            state: directory,
            owner: root,
            group: root,
          }
        - {
            path: /opt/home-automation-service,
            state: directory,
            owner: root,
            group: root,
          }
        - {
            path: /var/www/html/dashboard,
            state: directory,
            owner: root,
            group: root,
          }
    - name: Download MS product repository
      get_url:
        url: https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
        dest: /tmp/packages-microsoft-prod.deb
    - name: Install MS product repository
      apt:
        deb: /tmp/packages-microsoft-prod.deb
    - name: Import the GPG keys of the Jenkins repository
      apt_key:
        url: https://pkg.jenkins.io/debian/jenkins.io.key
        state: present
    - name: Add the Jenkins repository to the system
      lineinfile:
        path: /etc/apt/sources.list.d/jenkins.list
        state: present
        owner: root
        group: root
        mode: "0644"
        create: yes
        line: "deb http://pkg.jenkins.io/debian-stable binary/"
    - name: Install apt packages
      apt:
        name:
          - apt-transport-https
          - dotnet-sdk-8.0
          - openjdk-17-jdk
          - jenkins
          - ansible
          - nginx
          - wakeonlan
        state: present
        update_cache: yes
    - name: Copy nginx.conf
      copy:
        src: ./home_server/nginx/sites-available/
        dest: /etc/nginx/sites-available/
      notify:
        - restart nginx
    - name: Create symbolic link
      file:
        src: /etc/nginx/sites-available/external
        dest: /etc/nginx/sites-enabled/external
        state: link
    - name: Add cron jobs
      cron:
        name: "{{ item.name }}"
        minute: "{{ item.minute }}"
        hour: "{{ item.hour }}"
        job: "{{ item.job }}"
        state: present
      with_items:
        - {
            name: 財務情報定期更新,
            minute: "*/10",
            hour: "*",
            job: 'curl --location --request POST ''http://dashboard-api.home-server.localnet/api/financial-api/post-update-by-span-request'' --header ''Content-Type: application/json'' --data-raw ''{"Days": 60}''',
          }
        - {
            name: oui更新,
            minute: "44",
            hour: "4",
            job: "curl --location --request POST 'http://dashboard-api.home-server.localnet/api/network-api/post-update-vendor-list-request' --header 'Content-Type: application/json'",
          }
        - {
            name: Dynamic DNS更新Cron,
            minute: "*",
            hour: "*",
            job: 'curl "https://f5.si/update.php?domain={{ddns.domain}}&password={{ddns.token}}"',
          }
        - {
            name: jenkins backup,
            minute: "51",
            hour: "13",
            job: "rsync /var/lib/jenkins/backup rsync://{{ backup_server.rsync.host }}/jenkins_backup -r",
          }
    - name: Add back end api service
      copy:
        src: ./home_server/services/servicefiles/back_end_api.service
        dest: /etc/systemd/system/back_end_api.service
      notify:
        - restart back end api service
    - name: Enable back end api service
      service:
        name: back_end_api
        enabled: yes
      notify:
        - restart back end api service
    - name: Add electric power monitor service
      copy:
        src: ./home_server/services/servicefiles/electric_power_monitor.service
        dest: /etc/systemd/system/electric_power_monitor.service
      notify:
        - restart electric power monitor service
    - name: Enable electric power monitor service
      service:
        name: electric_power_monitor
        enabled: yes
      notify:
        - restart electric power monitor service
    - name: Add scraping service
      copy:
        src: ./home_server/services/servicefiles/scraping.service
        dest: /etc/systemd/system/scraping.service
      notify:
        - restart scraping service
    - name: Enable scraping service
      service:
        name: scraping
        enabled: yes
      notify:
        - restart scraping service
    - name: Add home automation service
      copy:
        src: ./home_server/services/servicefiles/home_automation.service
        dest: /etc/systemd/system/home_automation.service
      notify:
        - restart home automation service
    - name: Enable home automation service
      service:
        name: home_automation
        enabled: yes
      notify:
        - restart home automation service
  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart back end api service
      service: name=back_end_api state=restarted
    - name: restart electric power monitor service
      service: name=electric_power_monitor state=restarted
    - name: restart scraping service
      service: name=scraping state=restarted
    - name: restart home automation service
      service: name=home_automation state=restarted
